/* Task List Styles */
.tasks-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.task-item {
    background-color: white;
    border-radius: 8px;
    box-shadow: var(--card-shadow);
    padding: 15px;
    display: flex;
    align-items: center;
    transition: transform 0.2s;
}

.task-item:hover {
    transform: translateY(-2px);
}

.task-checkbox {
    margin-right: 15px;
}

.task-checkbox input {
    width: 18px;
    height: 18px;
    cursor: pointer;
}

.task-content {
    flex: 1;
}

.task-title {
    font-weight: 500;
    margin-bottom: 5px;
    display: flex;
    align-items: center;
}

.task-title span {
    margin-right: 8px;
}

.task-priority {
    display: inline-block;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 12px;
    margin-left: 10px;
}

.priority-high {
    background-color: #ffebee;
    color: var(--danger-color);
}

.priority-medium {
    background-color: #fff8e1;
    color: var(--warning-color);
}

.priority-low {
    background-color: #e8f5e9;
    color: var(--success-color);
}

.task-meta {
    display: flex;
    gap: 15px;
    font-size: 13px;
    color: var(--text-light);
}

.task-category {
    display: flex;
    align-items: center;
}

.task-category i {
    margin-right: 5px;
}

.task-assignee {
    display: flex;
    align-items: center;
}

.task-assignee img {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    margin-right: 5px;
}

.task-due {
    display: flex;
    align-items: center;
}

.task-due.overdue {
    color: var(--danger-color);
    font-weight: 500;
}

.task-actions {
    display: flex;
    gap: 10px;
}

.task-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: var(--text-light);
    font-size: 16px;
}

.task-btn:hover {
    color: var(--primary-color);
}

.task-btn.delete:hover {
    color: var(--danger-color);
}

/* Roommates Grid */
.roommates-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
}

.roommates-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
}

.roommate-card {
    background-color: white;
    border-radius: 8px;
    box-shadow: var(--card-shadow);
    padding: 20px;
    text-align: center;
    transition: transform 0.2s;
}

.roommate-card:hover {
    transform: translateY(-5px);
}

.roommate-avatar {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    margin: 0 auto 15px;
    border: 3px solid var(--primary-color);
}

.roommate-name {
    font-size: 18px;
    font-weight: 500;
    margin-bottom: 5px;
}

.roommate-contact {
    color: var(--text-light);
    margin-bottom: 15px;
    font-size: 14px;
}

.roommate-stats {
    display: flex;
    justify-content: space-around;
    border-top: 1px solid var(--border-color);
    padding-top: 15px;
    margin-top: 15px;
}

.stat {
    text-align: center;
}

.stat-value {
    font-size: 18px;
    font-weight: bold;
    color: var(--primary-color);
}

.stat-label {
    font-size: 12px;
    color: var(--text-light);
}

/* Empty States */
.empty-state {
    text-align: center;
    padding: 40px 20px;
    color: var(--text-light);
}

.empty-state i {
    font-size: 48px;
    margin-bottom: 15px;
    color: #ddd;
}

.empty-state p {
    margin-bottom: 20px;
}

/* Badges */
.badge {
    display: inline-block;
    padding: 3px 8px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 500;
}

.badge-success {
    background-color: #e8f5e9;
    color: var(--success-color);
}

.badge-warning {
    background-color: #fff8e1;
    color: var(--warning-color);
}

.badge-danger {
    background-color: #ffebee;
    color: var(--danger-color);
}

.badge-info {
    background-color: #e3f2fd;
    color: var(--info-color);
}

/* Loading States */
.loading {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 40px;
}

.loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid var(--primary-color);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Animation for notifications */
@keyframes slideIn {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

.notification {
    animation: slideIn 0.3s ease-out;
}

/* Task completion animation */
@keyframes taskComplete {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

.task-completed {
    animation: taskComplete 0.5s ease;
}